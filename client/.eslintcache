[{"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\index.js":"1","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\App.js":"2","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\reportWebVitals.js":"3","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\Dashboard.js":"4","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\project\\ProjectItem.js":"5","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\layout\\Header.js":"6","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\project\\CreateButton.js":"7","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\project\\AddProject.js":"8","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\store.js":"9","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\reducers\\index.js":"10","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\reducers\\errorReducer.js":"11","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\actions\\types.js":"12","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\actions\\projectActions.js":"13","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\reducers\\projectReducer.js":"14","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\project\\UpdateProject.js":"15"},{"size":500,"mtime":1608062920878,"results":"16","hashOfConfig":"17"},{"size":925,"mtime":1609378528698,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1608062920878,"results":"19","hashOfConfig":"17"},{"size":1468,"mtime":1609280546934,"results":"20","hashOfConfig":"17"},{"size":2438,"mtime":1609725089943,"results":"21","hashOfConfig":"17"},{"size":1571,"mtime":1609281960550,"results":"22","hashOfConfig":"17"},{"size":300,"mtime":1609177884406,"results":"23","hashOfConfig":"17"},{"size":4979,"mtime":1609621354234,"results":"24","hashOfConfig":"17"},{"size":641,"mtime":1609253778200,"results":"25","hashOfConfig":"17"},{"size":261,"mtime":1609525987658,"results":"26","hashOfConfig":"17"},{"size":296,"mtime":1609526055663,"results":"27","hashOfConfig":"17"},{"size":168,"mtime":1609722843652,"results":"28","hashOfConfig":"17"},{"size":1182,"mtime":1609726150161,"results":"29","hashOfConfig":"17"},{"size":799,"mtime":1609725248191,"results":"30","hashOfConfig":"17"},{"size":7569,"mtime":1609719512697,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"sh368p",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\index.js",[],["65","66"],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\App.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\reportWebVitals.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\project\\ProjectItem.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\layout\\Header.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\project\\CreateButton.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\project\\AddProject.js",["67"],"import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport classnames from 'classnames';\r\n\r\nclass AddProject extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      desc: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n  }\r\n\r\n  // UNSAFE_componentWillReceiveProps(nextProps){\r\n  //   if(nextProps.errors){\r\n  //     this.setState({errors:nextProps.errors});\r\n  //   }\r\n  // }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    let errors = {};\r\n    if (JSON.stringify(props.errors) !== '{}') {\r\n      errors = props.errors;\r\n      return({errors});\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    if (this.state.errors[e.target.name] !== undefined) {\r\n      this.state.errors[e.target.name] = '';\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      desc: this.state.desc,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    }\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create / Edit Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit.bind(this)}>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\" name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\" name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">{errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.desc\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    value={this.state.desc}\r\n                    name=\"desc\"\r\n                    onChange={this.onChange}>\r\n                  </textarea>\r\n                  {errors.desc && (\r\n                    <div className=\"invalid-feedback\">{errors.desc}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange} />\r\n                </div>\r\n\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange} />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.protoTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{ createProject })(AddProject);","C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\store.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\reducers\\index.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\actions\\types.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\actions\\projectActions.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\reducers\\projectReducer.js",[],"C:\\Users\\armor\\Documents\\UDEMY\\SPRING-REACT\\PPMToolFullStack\\client\\src\\components\\project\\UpdateProject.js",["68","69"],"import React, { Component } from 'react'\r\nimport { getProject, createProject } from '../../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\n\r\nclass UpdateProject extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {};\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    // UNSAFE_componentWillReceiveProps(nextProps) {\r\n    //     if (nextProps.errors) {\r\n    //         this.setState({ errors: nextProps.errors });\r\n    //     }\r\n    // }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        let errors = {};\r\n\r\n        if (JSON.stringify(props.errors) !== '{}') {\r\n            errors = props.errors;\r\n        }\r\n\r\n        let {\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            desc,\r\n            startDate,\r\n            endDate\r\n        } = props.project;\r\n\r\n        if (state.projectName !== props.projectName) projectName = state.projectName;\r\n        if (state.projectIdentifier !== props.projectIdentifier) desc = state.desc;\r\n        if (state.startDate !== props.startDate) startDate = state.startDate;\r\n        if (state.endDate !== props.endDate) endDate = state.endDate;\r\n\r\n        return ({ id, projectName, projectIdentifier, desc, startDate, endDate, errors });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        this.props.project[e.target.name] = e.target.value;\r\n        if (this.props.errors[e.target.name] !== undefined){\r\n            this.props.errors[e.target.name] = '';\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            desc: this.state.desc,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate\r\n        };\r\n\r\n        this.props.createProject(updateProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Create / Edit Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit.bind(this)}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.projectName\r\n                                        })}\r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"projectName\"\r\n                                        value={this.props.project.projectName || ''}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.projectName && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectName}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.projectIdentifier\r\n                                        })}\r\n                                        placeholder=\"Unique Project ID\"\r\n                                        name=\"projectIdentifier\"\r\n                                        value={this.props.project.projectIdentifier || '' }\r\n                                        onChange={this.onChange}\r\n                                        disabled />\r\n                                    {errors.projectIdentifier && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.desc\r\n                                        })}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"desc\"\r\n                                        value={this.props.project.desc || ''}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                    {errors.desc && (\r\n                                        <div className=\"invalid-feedback\">{errors.desc}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"startDate\"\r\n                                        value={this.props.project.startDate || ''}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"endDate\"\r\n                                        value={this.props.project.endDate || ''}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n        this.state.errors = {};\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst matchStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(matchStateToProps, { getProject, createProject })(UpdateProject);\r\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":43,"column":7,"nodeType":"76","endLine":43,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":162,"column":9,"nodeType":"79","messageId":"80","endLine":162,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":162,"column":9,"nodeType":"76","endLine":162,"endColumn":19},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]